
标题：连号区间数

    小明这些天一直在思考这样一个奇怪而有趣的问题：

    在1~N的某个全排列中有多少个连号区间呢？这里所说的连号区间的定义是：

    如果区间[L, R] 里的所有元素（即此排列的第L个到第R个元素）递增排序后能得到一个长度为R-L+1的“连续”数列，则称这个区间连号区间。

    当N很小的时候，小明可以很快地算出答案，但是当N变大的时候，问题就不是那么简单了，现在小明需要你的帮助。

输入格式：
第一行是一个正整数N (1 <= N <= 50000), 表示全排列的规模。
第二行是N个不同的数字Pi(1 <= Pi <= N)， 表示这N个数字的某一全排列。

输出格式：
输出一个整数，表示不同连号区间的数目。

示例：
用户输入：
4
3 2 4 1

程序应输出：
7

用户输入：
5
3 4 2 5 1

程序应输出：
9

解释：
第一个用例中，有7个连号区间分别是：[1,1], [1,2], [1,3], [1,4], [2,2], [3,3], [4,4]
第二个用例中，有9个连号区间分别是：[1,1], [1,2], [1,3], [1,4], [1,5], [2,2], [3,3], [4,4], [5,5]


资源约定：
峰值内存消耗 < 64M
CPU消耗  < 5000ms


请严格按要求输出，不要画蛇添足地打印类似：“请您输入...” 的多余内容。

所有代码放在同一个源文件中，调试通过后，拷贝提交该源码。

注意: main函数需要返回0
注意: 只使用ANSI C/ANSI C++ 标准，不要调用依赖于编译环境或操作系统的特殊函数。
注意: 所有依赖的函数必须明确地在源文件中 #include <xxx>， 不能通过工程设置而省略常用头文件。

提交时，注意选择所期望的编译器类型。

  


#include<cstdio>
#include<iostream>
#include<algorithm>
using namespace std;
int N,A[51000],B[51000],cnt;
int main(){
	cin>>N;
	for(int i=1;i<=N;i++){
		cin>>A[i];
	}
	for(int i=1;i<=N;i++){
		for(int l=2;l<=N-i+1;l++){
			memcpy(B,A,sizeof(B));
			//sort(B+i,B+i+l-1);
			sort(B+i,B+i+l);
			//for(int f=i;f<=i+l-1;f++) cout<<B[f]<<" ";
			//cout<<endl;
			int j;
			for(j=i;j<=i+l-2;j++){/*我只关注我应当关注的东西，我让他的执行按照我预定的轨道进行，然后在其退出的时候查看他的状态，看看与我设想的是否
      相同，若相同，则cnt++，否则不增加
      比如在判断1 2 3 4 的时候，只需要将j移动到3所处的位置即可，下面的一句是break
      再下面的语句  if(j==i+l-1) cnt++; 负责检查状态*/
				if(B[j]+1==B[j+1]) continue;
				break;
			}
			if(j==i+l-1) cnt++;
		}
	}
	cnt+=N;
	cout<<cnt; 
}
