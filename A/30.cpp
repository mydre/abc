  算法训练 筛选号码  
时间限制：1.0s   内存限制：512.0MB
提交此题    
问题描述
　　有n个人围成一圈，顺序排号（编号为1到n）。从第1个人开始报数(从1到3报数)，凡报到3的人退出圈子。从下一个人开始继续报数，直到剩下最后一个人，游戏结束。
　　问最后留下的是原来第几号的那位。
　　举个例子，8个人围成一圈：
　　1 2 3 4 5 6 7 8
　　第1次报数之后，3退出，剩下：
　　1 2 4 5 6 7 8	（现在从4开始报数）
　　第2次报数之后，6退出，剩下：
　　1 2 4 5 7 8	（现在从7开始报数）
　　第3次报数之后，1退出，剩下：
　　2 4 5 7 8	（现在从2开始报数）
　　第4次报数之后，5退出，剩下：
　　2 4 7 8	（现在从7开始报数）
　　第5次报数之后，2退出，剩下：
　　4 7 8	（现在从4开始报数）
　　第6次报数之后，8退出，剩下：
　　4 7	（现在从4开始报数）
　　最后一次报数之后，4退出，剩下：
　　7.
　　所以，最后留下来的人编号是7。
输入格式
　　一个正整数n，(1<n<10000)
输出格式
　　一个正整数，最后留下来的那个人的编号。
样例输入
8
样例输出
7
数据规模和约定
　　对于100%的数据，1<n<10000。
  
#include<cstdio>
#include<iostream>
#include<cstring>
#include<algorithm> 
using namespace std;
int ans;
int shu(int *a,int &m,int *flag,int n,int &len){//从m开始数数 
	for(int i=0;i<3;i++){//数三个存在的数
		while(flag[m]==0){
			if(m==n-1) m=0;
			else m++;//找没有被访问过的
		}  
		if(i==2) {//每数三个数去掉一个数 
			flag[m]=0;//表示这个数已经访问过了，置访问表示为0 
			len--; //使用len表示还剩几个数没有数 
			if(len==0){//如果还剩0个数没有数，则可以结束了 
				ans=m;//如果所有的数都输完了，则把下标m赋值给ans （可以看出，结束条件为数完所有的数） 
				return 1;
			} 
		}
		if(m==n-1) m=0;
		else m++;
	}
	return 0;
}
int main(){
	int n;
	cin>>n;
	int len=n;
	int *a=new int[n];
	int *b=new int[n];
	for(int i=0;i<n;i++){
		a[i]=i+1;b[i]=1;
	} 
	int ni=0;//从下标为0的数开始数 
	for(int i=0;i<n;i++){//总共有n个数，所以进行n次循环，每次去掉一个数（置访问标志为0） 
		shu(a,ni,b,n,len);//
	}
	cout<<a[ans];//输出结果 
}
